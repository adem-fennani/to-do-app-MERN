{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\todo-app-mern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Fetch tasks from backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks').then(res => res.json()).then(date => setTasks(data)).catch(err => console.error(\"Error fetching tasks: \", err));\n  }, []);\n\n  // Add a new task\n  const addTask = () => {\n    if (newTask.trim.trim() === \"\") return;\n    fetch('http://localhost:5000/api/tasks', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: newTask\n      })\n    }).then(res => res.json()).then(task => {\n      setTasks([...tasks, task]);\n      setNewTask(\"\");\n    }).catch(err => console.error(\"Error adding task: \", err));\n  };\n\n  // Delete a task\n  const deleteTask = id => {\n    fetch(`http:localhost:5000/api/tasks/${id}`, {\n      method: \"DELETE\"\n    }).then(() => setTasks(tasks.filter(task => task._id !== id))).catch(err => console.error(\"Error deleting task: \", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"MVDLnJyLcavc0PNJLnR8NMYsH5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetch","then","res","json","date","data","catch","err","console","error","addTask","trim","method","headers","body","JSON","stringify","title","task","deleteTask","id","filter","_id","classname","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","className","map","_c","$RefreshReg$"],"sources":["C:/Dev/todo-app-mern/frontend/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState(\"\");\r\n\r\n    // Fetch tasks from backend\r\n    useEffect(() => {\r\n    fetch('http://localhost:5000/api/tasks')\r\n        .then(res => res.json())\r\n        .then(date => setTasks(data))\r\n        .catch(err => console.error(\"Error fetching tasks: \", err))\r\n    }, []);\r\n\r\n    // Add a new task\r\n    const addTask = () => {\r\n        if (newTask.trim.trim() === \"\") return;\r\n        fetch('http://localhost:5000/api/tasks', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({ title: newTask}),\r\n        })\r\n            .then(res => res.json())\r\n            .then(task => {\r\n                setTasks([...tasks, task]);\r\n                setNewTask(\"\");\r\n            })\r\n            .catch(err => console.error(\"Error adding task: \", err));\r\n    };\r\n\r\n    // Delete a task\r\n    const deleteTask = (id) => {\r\n        fetch(`http:localhost:5000/api/tasks/${id}`, {\r\n            method: \"DELETE\",\r\n        })\r\n            .then(() => setTasks(tasks.filter(task => task._id !== id)))\r\n            .catch(err => console.error(\"Error deleting task: \", err));\r\n    };\r\n\r\n    return (\r\n        <div classname=\"App\">\r\n            <h1>To-Do List</h1>\r\n            <div classname=\"task-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newTask}\r\n                    onChange={(e) => setNewTask(e.target.value)}\r\n                    placeholder=\"Enter a new task\"\r\n                />\r\n                <button onClick={addTask}>Add Task</button>\r\n            </div>\r\n            <ul className =\"task-list\">\r\n                {tasks.map(task => (\r\n                    <li key={task._id}>\r\n                        {task.title}\r\n                        <button onClick={() => deleteTask(task._id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}